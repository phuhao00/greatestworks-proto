// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: mail.proto

package mail

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmailType int32

const (
	EmailType_NORMAL     EmailType = 0
	EmailType_COLLECT    EmailType = 1
	EmailType_RECYCLE    EmailType = 2
	EmailType_SYSTEM     EmailType = 3
	EmailType_POSTCARD   EmailType = 4  // 明信片
	EmailType_NOTEPAPER  EmailType = 5  // 信纸
	EmailType_GMPersonal EmailType = 9  // gm 给个人发的邮件
	EmailType_GMSpecial  EmailType = 10 // gm特殊邮件(双包并行邮件模板)
)

// Enum value maps for EmailType.
var (
	EmailType_name = map[int32]string{
		0:  "NORMAL",
		1:  "COLLECT",
		2:  "RECYCLE",
		3:  "SYSTEM",
		4:  "POSTCARD",
		5:  "NOTEPAPER",
		9:  "GMPersonal",
		10: "GMSpecial",
	}
	EmailType_value = map[string]int32{
		"NORMAL":     0,
		"COLLECT":    1,
		"RECYCLE":    2,
		"SYSTEM":     3,
		"POSTCARD":   4,
		"NOTEPAPER":  5,
		"GMPersonal": 9,
		"GMSpecial":  10,
	}
)

func (x EmailType) Enum() *EmailType {
	p := new(EmailType)
	*p = x
	return p
}

func (x EmailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmailType) Descriptor() protoreflect.EnumDescriptor {
	return file_mail_proto_enumTypes[0].Descriptor()
}

func (EmailType) Type() protoreflect.EnumType {
	return &file_mail_proto_enumTypes[0]
}

func (x EmailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmailType.Descriptor instead.
func (EmailType) EnumDescriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{0}
}

type EmailStatus int32

const (
	EmailStatus_INIT     EmailStatus = 0 // 初始状态
	EmailStatus_READ     EmailStatus = 1 // 已读
	EmailStatus_ACCEPTED EmailStatus = 2 // 已受理
)

// Enum value maps for EmailStatus.
var (
	EmailStatus_name = map[int32]string{
		0: "INIT",
		1: "READ",
		2: "ACCEPTED",
	}
	EmailStatus_value = map[string]int32{
		"INIT":     0,
		"READ":     1,
		"ACCEPTED": 2,
	}
)

func (x EmailStatus) Enum() *EmailStatus {
	p := new(EmailStatus)
	*p = x
	return p
}

func (x EmailStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmailStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mail_proto_enumTypes[1].Descriptor()
}

func (EmailStatus) Type() protoreflect.EnumType {
	return &file_mail_proto_enumTypes[1]
}

func (x EmailStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmailStatus.Descriptor instead.
func (EmailStatus) EnumDescriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{1}
}

type MailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MUuid          uint64       `protobuf:"varint,1,opt,name=mUuid,proto3" json:"mUuid,omitempty"`
	MailId         uint32       `protobuf:"varint,2,opt,name=mailId,proto3" json:"mailId,omitempty"` // 对就mail表ID
	Sender         uint64       `protobuf:"varint,3,opt,name=sender,proto3" json:"sender,omitempty"`
	MType          EmailType    `protobuf:"varint,4,opt,name=mType,proto3,enum=mail.EmailType" json:"mType,omitempty"`
	Status         EmailStatus  `protobuf:"varint,5,opt,name=status,proto3,enum=mail.EmailStatus" json:"status,omitempty"`
	SenderNickName string       `protobuf:"bytes,6,opt,name=senderNickName,proto3" json:"senderNickName,omitempty"`
	Content        string       `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Goods          []*GoodsInfo `protobuf:"bytes,8,rep,name=goods,proto3" json:"goods,omitempty"`
	Decorator      []string     `protobuf:"bytes,9,rep,name=decorator,proto3" json:"decorator,omitempty"` // 装饰
	Mtime          int64        `protobuf:"varint,10,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Color          []float32    `protobuf:"fixed32,11,rep,packed,name=color,proto3" json:"color,omitempty"`
	Template       uint32       `protobuf:"varint,12,opt,name=template,proto3" json:"template,omitempty"`    // 模板
	Paster         []uint32     `protobuf:"varint,13,rep,packed,name=paster,proto3" json:"paster,omitempty"` // 贴纸
	Topic          string       `protobuf:"bytes,14,opt,name=topic,proto3" json:"topic,omitempty"`
	SenderHead     uint32       `protobuf:"varint,15,opt,name=senderHead,proto3" json:"senderHead,omitempty"`
	Headline       string       `protobuf:"bytes,16,opt,name=headline,proto3" json:"headline,omitempty"` // 标题
	Version        string       `protobuf:"bytes,17,opt,name=version,proto3" json:"version,omitempty"`   // 版本号
	Url            string       `protobuf:"bytes,18,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MailInfo) Reset() {
	*x = MailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailInfo) ProtoMessage() {}

func (x *MailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailInfo.ProtoReflect.Descriptor instead.
func (*MailInfo) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{0}
}

func (x *MailInfo) GetMUuid() uint64 {
	if x != nil {
		return x.MUuid
	}
	return 0
}

func (x *MailInfo) GetMailId() uint32 {
	if x != nil {
		return x.MailId
	}
	return 0
}

func (x *MailInfo) GetSender() uint64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *MailInfo) GetMType() EmailType {
	if x != nil {
		return x.MType
	}
	return EmailType_NORMAL
}

func (x *MailInfo) GetStatus() EmailStatus {
	if x != nil {
		return x.Status
	}
	return EmailStatus_INIT
}

func (x *MailInfo) GetSenderNickName() string {
	if x != nil {
		return x.SenderNickName
	}
	return ""
}

func (x *MailInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MailInfo) GetGoods() []*GoodsInfo {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *MailInfo) GetDecorator() []string {
	if x != nil {
		return x.Decorator
	}
	return nil
}

func (x *MailInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *MailInfo) GetColor() []float32 {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *MailInfo) GetTemplate() uint32 {
	if x != nil {
		return x.Template
	}
	return 0
}

func (x *MailInfo) GetPaster() []uint32 {
	if x != nil {
		return x.Paster
	}
	return nil
}

func (x *MailInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MailInfo) GetSenderHead() uint32 {
	if x != nil {
		return x.SenderHead
	}
	return 0
}

func (x *MailInfo) GetHeadline() string {
	if x != nil {
		return x.Headline
	}
	return ""
}

func (x *MailInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MailInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint32 `protobuf:"varint,1,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	Num    int32  `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`
	Expire int64  `protobuf:"varint,3,opt,name=Expire,proto3" json:"Expire,omitempty"` // 过期时间
}

func (x *GoodsInfo) Reset() {
	*x = GoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfo) ProtoMessage() {}

func (x *GoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfo.ProtoReflect.Descriptor instead.
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsInfo) GetItemId() uint32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GoodsInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *GoodsInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type Letter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            uint64 `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                        // 唯一ID
	Msg             string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                           // 发信息
	Nick            string `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`                         // 发送人昵称
	Tm              int64  `protobuf:"varint,4,opt,name=tm,proto3" json:"tm,omitempty"`                            // 发时间
	Response        string `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`                 // 回信息
	ResponseTm      int64  `protobuf:"varint,6,opt,name=responseTm,proto3" json:"responseTm,omitempty"`            // 回时间
	SenderId        uint64 `protobuf:"varint,7,opt,name=senderId,proto3" json:"senderId,omitempty"`                // 发送人playerID
	IsRead          bool   `protobuf:"varint,8,opt,name=isRead,proto3" json:"isRead,omitempty"`                    // 是否已读
	IsAddFriend     bool   `protobuf:"varint,9,opt,name=isAddFriend,proto3" json:"isAddFriend,omitempty"`          // 是否加好友
	DealFriendState uint32 `protobuf:"varint,10,opt,name=dealFriendState,proto3" json:"dealFriendState,omitempty"` //处理好友请求信息的状态  0:未处理  1:已同意  2:已拒绝
}

func (x *Letter) Reset() {
	*x = Letter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Letter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Letter) ProtoMessage() {}

func (x *Letter) ProtoReflect() protoreflect.Message {
	mi := &file_mail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Letter.ProtoReflect.Descriptor instead.
func (*Letter) Descriptor() ([]byte, []int) {
	return file_mail_proto_rawDescGZIP(), []int{2}
}

func (x *Letter) GetUuid() uint64 {
	if x != nil {
		return x.Uuid
	}
	return 0
}

func (x *Letter) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Letter) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Letter) GetTm() int64 {
	if x != nil {
		return x.Tm
	}
	return 0
}

func (x *Letter) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *Letter) GetResponseTm() int64 {
	if x != nil {
		return x.ResponseTm
	}
	return 0
}

func (x *Letter) GetSenderId() uint64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *Letter) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Letter) GetIsAddFriend() bool {
	if x != nil {
		return x.IsAddFriend
	}
	return false
}

func (x *Letter) GetDealFriendState() uint32 {
	if x != nil {
		return x.DealFriendState
	}
	return 0
}

var File_mail_proto protoreflect.FileDescriptor

var file_mail_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x87, 0x04, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x4d, 0x0a, 0x09,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x06,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65, 0x61,
	0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x79, 0x0a, 0x09,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4f, 0x53, 0x54, 0x43, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54,
	0x45, 0x50, 0x41, 0x50, 0x45, 0x52, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x4d, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x4d, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x10, 0x0a, 0x2a, 0x2f, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x68, 0x75, 0x68, 0x61, 0x6f, 0x30, 0x30, 0x2f,
	0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x3b, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mail_proto_rawDescOnce sync.Once
	file_mail_proto_rawDescData = file_mail_proto_rawDesc
)

func file_mail_proto_rawDescGZIP() []byte {
	file_mail_proto_rawDescOnce.Do(func() {
		file_mail_proto_rawDescData = protoimpl.X.CompressGZIP(file_mail_proto_rawDescData)
	})
	return file_mail_proto_rawDescData
}

var file_mail_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mail_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mail_proto_goTypes = []interface{}{
	(EmailType)(0),    // 0: mail.EmailType
	(EmailStatus)(0),  // 1: mail.EmailStatus
	(*MailInfo)(nil),  // 2: mail.MailInfo
	(*GoodsInfo)(nil), // 3: mail.GoodsInfo
	(*Letter)(nil),    // 4: mail.letter
}
var file_mail_proto_depIdxs = []int32{
	0, // 0: mail.MailInfo.mType:type_name -> mail.EmailType
	1, // 1: mail.MailInfo.status:type_name -> mail.EmailStatus
	3, // 2: mail.MailInfo.goods:type_name -> mail.GoodsInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mail_proto_init() }
func file_mail_proto_init() {
	if File_mail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Letter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mail_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mail_proto_goTypes,
		DependencyIndexes: file_mail_proto_depIdxs,
		EnumInfos:         file_mail_proto_enumTypes,
		MessageInfos:      file_mail_proto_msgTypes,
	}.Build()
	File_mail_proto = out.File
	file_mail_proto_rawDesc = nil
	file_mail_proto_goTypes = nil
	file_mail_proto_depIdxs = nil
}
