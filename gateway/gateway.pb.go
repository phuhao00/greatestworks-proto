// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: gateway.proto

package gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GatewayErr int32

const (
	GatewayErr_Unknown        GatewayErr = 0
	GatewayErr_Success        GatewayErr = 1 // 成功
	GatewayErr_Verify         GatewayErr = 2 // 登录验证失败
	GatewayErr_RepeatedVerify GatewayErr = 3 // 重复验证
	GatewayErr_Closed         GatewayErr = 4 // 系统关门维护中
	GatewayErr_LoseCurCon     GatewayErr = 5 // 当前连接不在了
	GatewayErr_DisCurConn     GatewayErr = 6 // 当前连接没有断开
	GatewayErr_BeingReConn    GatewayErr = 7 // 正在重连
	GatewayErr_ZoneIdError    GatewayErr = 8 // 区错误
)

// Enum value maps for GatewayErr.
var (
	GatewayErr_name = map[int32]string{
		0: "Unknown",
		1: "Success",
		2: "Verify",
		3: "RepeatedVerify",
		4: "Closed",
		5: "LoseCurCon",
		6: "DisCurConn",
		7: "BeingReConn",
		8: "ZoneIdError",
	}
	GatewayErr_value = map[string]int32{
		"Unknown":        0,
		"Success":        1,
		"Verify":         2,
		"RepeatedVerify": 3,
		"Closed":         4,
		"LoseCurCon":     5,
		"DisCurConn":     6,
		"BeingReConn":    7,
		"ZoneIdError":    8,
	}
)

func (x GatewayErr) Enum() *GatewayErr {
	p := new(GatewayErr)
	*p = x
	return p
}

func (x GatewayErr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayErr) Descriptor() protoreflect.EnumDescriptor {
	return file_gateway_proto_enumTypes[0].Descriptor()
}

func (GatewayErr) Type() protoreflect.EnumType {
	return &file_gateway_proto_enumTypes[0]
}

func (x GatewayErr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayErr.Descriptor instead.
func (GatewayErr) EnumDescriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

type JoinErrorCode int32

const (
	JoinErrorCode_JoinWorldSuccess JoinErrorCode = 0 //成功
	JoinErrorCode_JoinWorldNotOpen JoinErrorCode = 1 //服务器未开放
	JoinErrorCode_JoinWorldIng     JoinErrorCode = 2 //正在登陆中
	JoinErrorCode_JoinWorldIsFull  JoinErrorCode = 3 //服务器人数已满
	JoinErrorCode_JoinZoneIdError  JoinErrorCode = 4 //区错误
)

// Enum value maps for JoinErrorCode.
var (
	JoinErrorCode_name = map[int32]string{
		0: "JoinWorldSuccess",
		1: "JoinWorldNotOpen",
		2: "JoinWorldIng",
		3: "JoinWorldIsFull",
		4: "JoinZoneIdError",
	}
	JoinErrorCode_value = map[string]int32{
		"JoinWorldSuccess": 0,
		"JoinWorldNotOpen": 1,
		"JoinWorldIng":     2,
		"JoinWorldIsFull":  3,
		"JoinZoneIdError":  4,
	}
)

func (x JoinErrorCode) Enum() *JoinErrorCode {
	p := new(JoinErrorCode)
	*p = x
	return p
}

func (x JoinErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_gateway_proto_enumTypes[1].Descriptor()
}

func (JoinErrorCode) Type() protoreflect.EnumType {
	return &file_gateway_proto_enumTypes[1]
}

func (x JoinErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinErrorCode.Descriptor instead.
func (JoinErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

type CSGatewayLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid   uint64 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	PlatName string `protobuf:"bytes,3,opt,name=platName,proto3" json:"platName,omitempty"`
	ZoneId   int32  `protobuf:"varint,4,opt,name=zoneId,proto3" json:"zoneId,omitempty"` //分区新增 在登录时，区分玩家要登录的时哪个区，DB数据、online系统互通
}

func (x *CSGatewayLogin) Reset() {
	*x = CSGatewayLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGatewayLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGatewayLogin) ProtoMessage() {}

func (x *CSGatewayLogin) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGatewayLogin.ProtoReflect.Descriptor instead.
func (*CSGatewayLogin) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *CSGatewayLogin) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *CSGatewayLogin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CSGatewayLogin) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CSGatewayLogin) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type SCGatewayLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode uint32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"` // 1，成功，2，登录验证失败, 3, 重复验证, 4，系统关门维护中;
	Userid  uint64 `protobuf:"varint,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SceneId int32  `protobuf:"varint,4,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	ZoneId  int32  `protobuf:"varint,5,opt,name=zoneId,proto3" json:"zoneId,omitempty"` //分区新增 在登录时，区分玩家要登录的时哪个区，DB数据、online系统互通
}

func (x *SCGatewayLogin) Reset() {
	*x = SCGatewayLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGatewayLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGatewayLogin) ProtoMessage() {}

func (x *SCGatewayLogin) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGatewayLogin.ProtoReflect.Descriptor instead.
func (*SCGatewayLogin) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *SCGatewayLogin) GetErrCode() uint32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SCGatewayLogin) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *SCGatewayLogin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SCGatewayLogin) GetSceneId() int32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *SCGatewayLogin) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type CSGatewayLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	PlatName string `protobuf:"bytes,3,opt,name=platName,proto3" json:"platName,omitempty"`
}

func (x *CSGatewayLogout) Reset() {
	*x = CSGatewayLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGatewayLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGatewayLogout) ProtoMessage() {}

func (x *CSGatewayLogout) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGatewayLogout.ProtoReflect.Descriptor instead.
func (*CSGatewayLogout) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *CSGatewayLogout) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CSGatewayLogout) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CSGatewayLogout) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

type SCGatewayLogout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SCGatewayLogout) Reset() {
	*x = SCGatewayLogout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGatewayLogout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGatewayLogout) ProtoMessage() {}

func (x *SCGatewayLogout) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGatewayLogout.ProtoReflect.Descriptor instead.
func (*SCGatewayLogout) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

type CSGatewayOnlineList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId int32 `protobuf:"varint,1,opt,name=zoneId,proto3" json:"zoneId,omitempty"` //分区新增 在登录时，区分玩家要登录的时哪个区，DB数据、online系统互通
}

func (x *CSGatewayOnlineList) Reset() {
	*x = CSGatewayOnlineList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGatewayOnlineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGatewayOnlineList) ProtoMessage() {}

func (x *CSGatewayOnlineList) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGatewayOnlineList.ProtoReflect.Descriptor instead.
func (*CSGatewayOnlineList) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *CSGatewayOnlineList) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type OnlineList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid     string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Players int32  `protobuf:"varint,4,opt,name=players,proto3" json:"players,omitempty"`
	ProId   uint32 `protobuf:"varint,5,opt,name=proId,proto3" json:"proId,omitempty"`
	Max     int32  `protobuf:"varint,6,opt,name=max,proto3" json:"max,omitempty"`       // 最大人数
	ZoneId  int32  `protobuf:"varint,7,opt,name=zoneId,proto3" json:"zoneId,omitempty"` //分区新增 在登录时，区分玩家要登录的时哪个区，DB数据、online系统互通
}

func (x *OnlineList) Reset() {
	*x = OnlineList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineList) ProtoMessage() {}

func (x *OnlineList) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineList.ProtoReflect.Descriptor instead.
func (*OnlineList) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *OnlineList) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *OnlineList) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *OnlineList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OnlineList) GetPlayers() int32 {
	if x != nil {
		return x.Players
	}
	return 0
}

func (x *OnlineList) GetProId() uint32 {
	if x != nil {
		return x.ProId
	}
	return 0
}

func (x *OnlineList) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *OnlineList) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type SCGatewayOnlineList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*OnlineList `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SCGatewayOnlineList) Reset() {
	*x = SCGatewayOnlineList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGatewayOnlineList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGatewayOnlineList) ProtoMessage() {}

func (x *SCGatewayOnlineList) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGatewayOnlineList.ProtoReflect.Descriptor instead.
func (*SCGatewayOnlineList) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *SCGatewayOnlineList) GetList() []*OnlineList {
	if x != nil {
		return x.List
	}
	return nil
}

type CSGatewayJoinOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid     string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Quick   bool   `protobuf:"varint,2,opt,name=quick,proto3" json:"quick,omitempty"`
	ZoneId  int32  `protobuf:"varint,3,opt,name=zoneId,proto3" json:"zoneId,omitempty"` //分区新增 在登录时，区分玩家要登录的时哪个区，DB数据、online系统互通
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CSGatewayJoinOnline) Reset() {
	*x = CSGatewayJoinOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSGatewayJoinOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSGatewayJoinOnline) ProtoMessage() {}

func (x *CSGatewayJoinOnline) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSGatewayJoinOnline.ProtoReflect.Descriptor instead.
func (*CSGatewayJoinOnline) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *CSGatewayJoinOnline) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *CSGatewayJoinOnline) GetQuick() bool {
	if x != nil {
		return x.Quick
	}
	return false
}

func (x *CSGatewayJoinOnline) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *CSGatewayJoinOnline) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SCGatewayJoinOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid          uint64        `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Account         string        `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Nick            string        `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	Gold            uint32        `protobuf:"varint,5,opt,name=gold,proto3" json:"gold,omitempty"`
	SceneId         int32         `protobuf:"varint,6,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	IsNew           bool          `protobuf:"varint,7,opt,name=isNew,proto3" json:"isNew,omitempty"`
	Frame           uint32        `protobuf:"varint,8,opt,name=frame,proto3" json:"frame,omitempty"`  // 相框
	Head            uint32        `protobuf:"varint,9,opt,name=head,proto3" json:"head,omitempty"`    // 头像
	Model           uint32        `protobuf:"varint,10,opt,name=model,proto3" json:"model,omitempty"` // 模型
	Sex             uint32        `protobuf:"varint,11,opt,name=sex,proto3" json:"sex,omitempty"`
	Level           int32         `protobuf:"varint,12,opt,name=level,proto3" json:"level,omitempty"`
	Exp             int32         `protobuf:"varint,13,opt,name=exp,proto3" json:"exp,omitempty"`
	RegTime         int64         `protobuf:"varint,14,opt,name=regTime,proto3" json:"regTime,omitempty"`
	ServerTime      int64         `protobuf:"varint,15,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	TodayFirstLogin bool          `protobuf:"varint,16,opt,name=todayFirstLogin,proto3" json:"todayFirstLogin,omitempty"`            // 今日首次登陆
	ProcIndex       uint32        `protobuf:"varint,17,opt,name=procIndex,proto3" json:"procIndex,omitempty"`                        // 当前所在的服务器ID
	ErrCode         JoinErrorCode `protobuf:"varint,18,opt,name=errCode,proto3,enum=gateway.JoinErrorCode" json:"errCode,omitempty"` // 进入服务器错误码
}

func (x *SCGatewayJoinOnline) Reset() {
	*x = SCGatewayJoinOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCGatewayJoinOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCGatewayJoinOnline) ProtoMessage() {}

func (x *SCGatewayJoinOnline) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCGatewayJoinOnline.ProtoReflect.Descriptor instead.
func (*SCGatewayJoinOnline) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *SCGatewayJoinOnline) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SCGatewayJoinOnline) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *SCGatewayJoinOnline) GetGold() uint32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetSceneId() int32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *SCGatewayJoinOnline) GetFrame() uint32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetHead() uint32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetModel() uint32 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetTodayFirstLogin() bool {
	if x != nil {
		return x.TodayFirstLogin
	}
	return false
}

func (x *SCGatewayJoinOnline) GetProcIndex() uint32 {
	if x != nil {
		return x.ProcIndex
	}
	return 0
}

func (x *SCGatewayJoinOnline) GetErrCode() JoinErrorCode {
	if x != nil {
		return x.ErrCode
	}
	return JoinErrorCode_JoinWorldSuccess
}

type SCRewardBoxNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardType uint32           `protobuf:"varint,1,opt,name=rewardType,proto3" json:"rewardType,omitempty"`                                                                                          // 弹框类型 0:弹窗 1:飘字 2:动画
	RewardList map[uint32]int32 `protobuf:"bytes,2,rep,name=rewardList,proto3" json:"rewardList,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 任务奖励
	Source     int32            `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`                                                                                                  // 来源
}

func (x *SCRewardBoxNotify) Reset() {
	*x = SCRewardBoxNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCRewardBoxNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCRewardBoxNotify) ProtoMessage() {}

func (x *SCRewardBoxNotify) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCRewardBoxNotify.ProtoReflect.Descriptor instead.
func (*SCRewardBoxNotify) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *SCRewardBoxNotify) GetRewardType() uint32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *SCRewardBoxNotify) GetRewardList() map[uint32]int32 {
	if x != nil {
		return x.RewardList
	}
	return nil
}

func (x *SCRewardBoxNotify) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type CSReconnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid   uint64 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	PlatName string `protobuf:"bytes,3,opt,name=platName,proto3" json:"platName,omitempty"`
	ZoneId   int32  `protobuf:"varint,4,opt,name=zoneId,proto3" json:"zoneId,omitempty"` //分区新增 在登录时，区分玩家要登录的时哪个区，DB数据、online系统互通
	Version  string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CSReconnection) Reset() {
	*x = CSReconnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSReconnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSReconnection) ProtoMessage() {}

func (x *CSReconnection) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSReconnection.ProtoReflect.Descriptor instead.
func (*CSReconnection) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *CSReconnection) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *CSReconnection) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CSReconnection) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CSReconnection) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *CSReconnection) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SCReconnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret uint32 `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 0-失败(失败返回正常登录流程) 1-成功
}

func (x *SCReconnection) Reset() {
	*x = SCReconnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCReconnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCReconnection) ProtoMessage() {}

func (x *SCReconnection) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCReconnection.ProtoReflect.Descriptor instead.
func (*SCReconnection) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *SCReconnection) GetRet() uint32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

type ClientOnlineRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Userid          uint64 `protobuf:"varint,2,opt,name=userid,proto3" json:"userid,omitempty"`
	CharId          int32  `protobuf:"varint,3,opt,name=charId,proto3" json:"charId,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Gold            uint32 `protobuf:"varint,5,opt,name=gold,proto3" json:"gold,omitempty"`
	SceneId         int32  `protobuf:"varint,6,opt,name=sceneId,proto3" json:"sceneId,omitempty"`
	Players         int32  `protobuf:"varint,7,opt,name=players,proto3" json:"players,omitempty"`
	IsNew           bool   `protobuf:"varint,8,opt,name=isNew,proto3" json:"isNew,omitempty"`
	Frame           uint32 `protobuf:"varint,9,opt,name=frame,proto3" json:"frame,omitempty"`
	Head            uint32 `protobuf:"varint,10,opt,name=head,proto3" json:"head,omitempty"`
	Model           uint32 `protobuf:"varint,11,opt,name=model,proto3" json:"model,omitempty"`
	Sex             uint32 `protobuf:"varint,12,opt,name=sex,proto3" json:"sex,omitempty"`
	BubbleFrame     uint32 `protobuf:"varint,13,opt,name=bubbleFrame,proto3" json:"bubbleFrame,omitempty"`
	SilverCoin      int32  `protobuf:"varint,14,opt,name=silverCoin,proto3" json:"silverCoin,omitempty"`
	Level           int32  `protobuf:"varint,15,opt,name=level,proto3" json:"level,omitempty"`
	Exp             int32  `protobuf:"varint,16,opt,name=exp,proto3" json:"exp,omitempty"`
	RegTime         int64  `protobuf:"varint,17,opt,name=regTime,proto3" json:"regTime,omitempty"`
	ServerTime      int64  `protobuf:"varint,18,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	Reconnection    bool   `protobuf:"varint,19,opt,name=reconnection,proto3" json:"reconnection,omitempty"`
	TodayFirstLogin bool   `protobuf:"varint,20,opt,name=todayFirstLogin,proto3" json:"todayFirstLogin,omitempty"`
	ProcIndex       uint32 `protobuf:"varint,21,opt,name=procIndex,proto3" json:"procIndex,omitempty"`
}

func (x *ClientOnlineRet) Reset() {
	*x = ClientOnlineRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientOnlineRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientOnlineRet) ProtoMessage() {}

func (x *ClientOnlineRet) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientOnlineRet.ProtoReflect.Descriptor instead.
func (*ClientOnlineRet) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *ClientOnlineRet) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *ClientOnlineRet) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *ClientOnlineRet) GetCharId() int32 {
	if x != nil {
		return x.CharId
	}
	return 0
}

func (x *ClientOnlineRet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientOnlineRet) GetGold() uint32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *ClientOnlineRet) GetSceneId() int32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

func (x *ClientOnlineRet) GetPlayers() int32 {
	if x != nil {
		return x.Players
	}
	return 0
}

func (x *ClientOnlineRet) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *ClientOnlineRet) GetFrame() uint32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *ClientOnlineRet) GetHead() uint32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *ClientOnlineRet) GetModel() uint32 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *ClientOnlineRet) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *ClientOnlineRet) GetBubbleFrame() uint32 {
	if x != nil {
		return x.BubbleFrame
	}
	return 0
}

func (x *ClientOnlineRet) GetSilverCoin() int32 {
	if x != nil {
		return x.SilverCoin
	}
	return 0
}

func (x *ClientOnlineRet) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ClientOnlineRet) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ClientOnlineRet) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *ClientOnlineRet) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *ClientOnlineRet) GetReconnection() bool {
	if x != nil {
		return x.Reconnection
	}
	return false
}

func (x *ClientOnlineRet) GetTodayFirstLogin() bool {
	if x != nil {
		return x.TodayFirstLogin
	}
	return false
}

func (x *ClientOnlineRet) GetProcIndex() uint32 {
	if x != nil {
		return x.ProcIndex
	}
	return 0
}

type ClientWorld struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid        uint64 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	IsReconnected bool   `protobuf:"varint,2,opt,name=IsReconnected,proto3" json:"IsReconnected,omitempty"`
	RemoteIp      string `protobuf:"bytes,3,opt,name=remoteIp,proto3" json:"remoteIp,omitempty"`
	GatewayIp     string `protobuf:"bytes,4,opt,name=gatewayIp,proto3" json:"gatewayIp,omitempty"`
	Version       string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ClientWorld) Reset() {
	*x = ClientWorld{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientWorld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientWorld) ProtoMessage() {}

func (x *ClientWorld) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientWorld.ProtoReflect.Descriptor instead.
func (*ClientWorld) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *ClientWorld) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *ClientWorld) GetIsReconnected() bool {
	if x != nil {
		return x.IsReconnected
	}
	return false
}

func (x *ClientWorld) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

func (x *ClientWorld) GetGatewayIp() string {
	if x != nil {
		return x.GatewayIp
	}
	return ""
}

func (x *ClientWorld) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ClientOffline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid uint64 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	OpType uint32 `protobuf:"varint,2,opt,name=opType,proto3" json:"opType,omitempty"` // 1-离线 2-切线(异地登录)
}

func (x *ClientOffline) Reset() {
	*x = ClientOffline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientOffline) ProtoMessage() {}

func (x *ClientOffline) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientOffline.ProtoReflect.Descriptor instead.
func (*ClientOffline) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *ClientOffline) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *ClientOffline) GetOpType() uint32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

var File_gateway_proto protoreflect.FileDescriptor

var file_gateway_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x72, 0x0a, 0x0e, 0x43, 0x53, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a,
	0x0e, 0x53, 0x43, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x0f, 0x43, 0x53, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x43, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x53, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0a, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x13, 0x53, 0x43, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x43, 0x53, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x03, 0x0a, 0x13, 0x53,
	0x43, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x11, 0x53,
	0x43, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53,
	0x43, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x43, 0x53, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x0e, 0x53, 0x43, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xad, 0x04, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6c, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x69,
	0x6c, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x94, 0x01, 0x0a, 0x0a, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x72, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x4c, 0x6f, 0x73, 0x65, 0x43, 0x75, 0x72, 0x43, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x69, 0x73, 0x43, 0x75, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x10, 0x06, 0x12, 0x0f,
	0x0a, 0x0b, 0x42, 0x65, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x10, 0x07, 0x12,
	0x0f, 0x0a, 0x0b, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x08,
	0x2a, 0x77, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x6e, 0x67, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x73, 0x46, 0x75,
	0x6c, 0x6c, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x5a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x04, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x68, 0x75, 0x68, 0x61, 0x6f, 0x30, 0x30,
	0x2f, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x3b, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData = file_gateway_proto_rawDesc
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_proto_rawDescData)
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_gateway_proto_goTypes = []interface{}{
	(GatewayErr)(0),             // 0: gateway.GatewayErr
	(JoinErrorCode)(0),          // 1: gateway.JoinErrorCode
	(*CSGatewayLogin)(nil),      // 2: gateway.CSGatewayLogin
	(*SCGatewayLogin)(nil),      // 3: gateway.SCGatewayLogin
	(*CSGatewayLogout)(nil),     // 4: gateway.CSGatewayLogout
	(*SCGatewayLogout)(nil),     // 5: gateway.SCGatewayLogout
	(*CSGatewayOnlineList)(nil), // 6: gateway.CSGatewayOnlineList
	(*OnlineList)(nil),          // 7: gateway.OnlineList
	(*SCGatewayOnlineList)(nil), // 8: gateway.SCGatewayOnlineList
	(*CSGatewayJoinOnline)(nil), // 9: gateway.CSGatewayJoinOnline
	(*SCGatewayJoinOnline)(nil), // 10: gateway.SCGatewayJoinOnline
	(*SCRewardBoxNotify)(nil),   // 11: gateway.SCRewardBoxNotify
	(*CSReconnection)(nil),      // 12: gateway.CSReconnection
	(*SCReconnection)(nil),      // 13: gateway.SCReconnection
	(*ClientOnlineRet)(nil),     // 14: gateway.ClientOnlineRet
	(*ClientWorld)(nil),         // 15: gateway.ClientWorld
	(*ClientOffline)(nil),       // 16: gateway.ClientOffline
	nil,                         // 17: gateway.SCRewardBoxNotify.RewardListEntry
}
var file_gateway_proto_depIdxs = []int32{
	7,  // 0: gateway.SCGatewayOnlineList.list:type_name -> gateway.OnlineList
	1,  // 1: gateway.SCGatewayJoinOnline.errCode:type_name -> gateway.JoinErrorCode
	17, // 2: gateway.SCRewardBoxNotify.rewardList:type_name -> gateway.SCRewardBoxNotify.RewardListEntry
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGatewayLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGatewayLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGatewayLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGatewayLogout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGatewayOnlineList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGatewayOnlineList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSGatewayJoinOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCGatewayJoinOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCRewardBoxNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSReconnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCReconnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientOnlineRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientWorld); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientOffline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		EnumInfos:         file_gateway_proto_enumTypes,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_rawDesc = nil
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
