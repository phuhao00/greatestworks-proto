// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: sever_common.proto

package server_common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionParseType int32

const (
	ActionParseType_Nothing    ActionParseType = 0
	ActionParseType_HoldDishes ActionParseType = 1 // 举菜
	ActionParseType_EatDishes  ActionParseType = 2 // 吃菜
)

// Enum value maps for ActionParseType.
var (
	ActionParseType_name = map[int32]string{
		0: "Nothing",
		1: "HoldDishes",
		2: "EatDishes",
	}
	ActionParseType_value = map[string]int32{
		"Nothing":    0,
		"HoldDishes": 1,
		"EatDishes":  2,
	}
)

func (x ActionParseType) Enum() *ActionParseType {
	p := new(ActionParseType)
	*p = x
	return p
}

func (x ActionParseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionParseType) Descriptor() protoreflect.EnumDescriptor {
	return file_sever_common_proto_enumTypes[0].Descriptor()
}

func (ActionParseType) Type() protoreflect.EnumType {
	return &file_sever_common_proto_enumTypes[0]
}

func (x ActionParseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionParseType.Descriptor instead.
func (ActionParseType) EnumDescriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{0}
}

type InterObjStatus int32

const (
	InterObjStatus_ObjectNormal  InterObjStatus = 0 // 正常
	InterObjStatus_ObjectHarvest InterObjStatus = 1 // 成熟
)

// Enum value maps for InterObjStatus.
var (
	InterObjStatus_name = map[int32]string{
		0: "ObjectNormal",
		1: "ObjectHarvest",
	}
	InterObjStatus_value = map[string]int32{
		"ObjectNormal":  0,
		"ObjectHarvest": 1,
	}
)

func (x InterObjStatus) Enum() *InterObjStatus {
	p := new(InterObjStatus)
	*p = x
	return p
}

func (x InterObjStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterObjStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sever_common_proto_enumTypes[1].Descriptor()
}

func (InterObjStatus) Type() protoreflect.EnumType {
	return &file_sever_common_proto_enumTypes[1]
}

func (x InterObjStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterObjStatus.Descriptor instead.
func (InterObjStatus) EnumDescriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{1}
}

type KickReason int32

const (
	KickReason_UNKNOWN     KickReason = 0 // 未知原因
	KickReason_indulgeStop KickReason = 1 // 防沉迷
	KickReason_RemoteLogin KickReason = 2 // 异地登录
	KickReason_ServerClose KickReason = 3 // 服务器关闭
	KickReason_GM          KickReason = 4 // GM
	KickReason_RefundPay   KickReason = 5 // 退款
	KickReason_NoResponse  KickReason = 6 // 未响应
)

// Enum value maps for KickReason.
var (
	KickReason_name = map[int32]string{
		0: "UNKNOWN",
		1: "indulgeStop",
		2: "RemoteLogin",
		3: "ServerClose",
		4: "GM",
		5: "RefundPay",
		6: "NoResponse",
	}
	KickReason_value = map[string]int32{
		"UNKNOWN":     0,
		"indulgeStop": 1,
		"RemoteLogin": 2,
		"ServerClose": 3,
		"GM":          4,
		"RefundPay":   5,
		"NoResponse":  6,
	}
)

func (x KickReason) Enum() *KickReason {
	p := new(KickReason)
	*p = x
	return p
}

func (x KickReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KickReason) Descriptor() protoreflect.EnumDescriptor {
	return file_sever_common_proto_enumTypes[2].Descriptor()
}

func (KickReason) Type() protoreflect.EnumType {
	return &file_sever_common_proto_enumTypes[2]
}

func (x KickReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KickReason.Descriptor instead.
func (KickReason) EnumDescriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{2}
}

type ServerCategory int32

const (
	ServerCategory_Undefined ServerCategory = 0 //没定义
	ServerCategory_Login     ServerCategory = 1 //登录服
	ServerCategory_Gateway   ServerCategory = 2 //网关
	ServerCategory_World     ServerCategory = 3 //世界服，大厅
	ServerCategory_DB        ServerCategory = 4 //
)

// Enum value maps for ServerCategory.
var (
	ServerCategory_name = map[int32]string{
		0: "Undefined",
		1: "Login",
		2: "Gateway",
		3: "World",
		4: "DB",
	}
	ServerCategory_value = map[string]int32{
		"Undefined": 0,
		"Login":     1,
		"Gateway":   2,
		"World":     3,
		"DB":        4,
	}
)

func (x ServerCategory) Enum() *ServerCategory {
	p := new(ServerCategory)
	*p = x
	return p
}

func (x ServerCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_sever_common_proto_enumTypes[3].Descriptor()
}

func (ServerCategory) Type() protoreflect.EnumType {
	return &file_sever_common_proto_enumTypes[3]
}

func (x ServerCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerCategory.Descriptor instead.
func (ServerCategory) EnumDescriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{3}
}

type ActionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionState     uint32 `protobuf:"varint,1,opt,name=actionState,proto3" json:"actionState,omitempty"`         // 动作枚举值
	ActionStartTime int64  `protobuf:"varint,2,opt,name=actionStartTime,proto3" json:"actionStartTime,omitempty"` // 动作开始时间
	Param           string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`                      // 参数
}

func (x *ActionData) Reset() {
	*x = ActionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionData) ProtoMessage() {}

func (x *ActionData) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionData.ProtoReflect.Descriptor instead.
func (*ActionData) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{0}
}

func (x *ActionData) GetActionState() uint32 {
	if x != nil {
		return x.ActionState
	}
	return 0
}

func (x *ActionData) GetActionStartTime() int64 {
	if x != nil {
		return x.ActionStartTime
	}
	return 0
}

func (x *ActionData) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type PlayerBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId        uint64      `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	CharId          int32       `protobuf:"varint,2,opt,name=charId,proto3" json:"charId,omitempty"`
	Name            string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gold            int32       `protobuf:"varint,4,opt,name=gold,proto3" json:"gold,omitempty"`
	PositionX       float32     `protobuf:"fixed32,5,opt,name=positionX,proto3" json:"positionX,omitempty"`
	PositionY       float32     `protobuf:"fixed32,6,opt,name=positionY,proto3" json:"positionY,omitempty"`
	PositionZ       float32     `protobuf:"fixed32,7,opt,name=positionZ,proto3" json:"positionZ,omitempty"`
	Orientation     float32     `protobuf:"fixed32,8,opt,name=orientation,proto3" json:"orientation,omitempty"`
	Frame           uint32      `protobuf:"varint,9,opt,name=frame,proto3" json:"frame,omitempty"`              // 相框
	Head            uint32      `protobuf:"varint,10,opt,name=head,proto3" json:"head,omitempty"`               // 头像
	HeadUrl         string      `protobuf:"bytes,11,opt,name=HeadUrl,proto3" json:"HeadUrl,omitempty"`          // 自定义头像url
	Model           uint32      `protobuf:"varint,12,opt,name=model,proto3" json:"model,omitempty"`             // 模型
	BubbleFrame     uint32      `protobuf:"varint,13,opt,name=bubbleFrame,proto3" json:"bubbleFrame,omitempty"` // 气泡框
	Coin            int32       `protobuf:"varint,14,opt,name=coin,proto3" json:"coin,omitempty"`               //
	VehicleID       uint64      `protobuf:"varint,15,opt,name=vehicleID,proto3" json:"vehicleID,omitempty"`     // 当前乘坐的载具ID
	ActData         *ActionData `protobuf:"bytes,16,opt,name=actData,proto3" json:"actData,omitempty"`          // 动作
	VipLevel        uint32      `protobuf:"varint,17,opt,name=vipLevel,proto3" json:"vipLevel,omitempty"`       // vip lv
	Exp             int32       `protobuf:"varint,18,opt,name=exp,proto3" json:"exp,omitempty"`
	InteractObjID   uint64      `protobuf:"varint,19,opt,name=interactObjID,proto3" json:"interactObjID,omitempty"`     // 交互物件ID
	InteractObjSeat uint32      `protobuf:"varint,20,opt,name=interactObjSeat,proto3" json:"interactObjSeat,omitempty"` // 交互物件座位号
	NameColor       bool        `protobuf:"varint,21,opt,name=nameColor,proto3" json:"nameColor,omitempty"`             // 昵称变颜色
	BaseLevel       int32       `protobuf:"varint,22,opt,name=baseLevel,proto3" json:"baseLevel,omitempty"`             //人物等级
	BaseExp         int32       `protobuf:"varint,23,opt,name=baseExp,proto3" json:"baseExp,omitempty"`                 //人物经验
}

func (x *PlayerBaseInfo) Reset() {
	*x = PlayerBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerBaseInfo) ProtoMessage() {}

func (x *PlayerBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerBaseInfo.ProtoReflect.Descriptor instead.
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerBaseInfo) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerBaseInfo) GetCharId() int32 {
	if x != nil {
		return x.CharId
	}
	return 0
}

func (x *PlayerBaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerBaseInfo) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *PlayerBaseInfo) GetPositionX() float32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *PlayerBaseInfo) GetPositionY() float32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *PlayerBaseInfo) GetPositionZ() float32 {
	if x != nil {
		return x.PositionZ
	}
	return 0
}

func (x *PlayerBaseInfo) GetOrientation() float32 {
	if x != nil {
		return x.Orientation
	}
	return 0
}

func (x *PlayerBaseInfo) GetFrame() uint32 {
	if x != nil {
		return x.Frame
	}
	return 0
}

func (x *PlayerBaseInfo) GetHead() uint32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *PlayerBaseInfo) GetHeadUrl() string {
	if x != nil {
		return x.HeadUrl
	}
	return ""
}

func (x *PlayerBaseInfo) GetModel() uint32 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *PlayerBaseInfo) GetBubbleFrame() uint32 {
	if x != nil {
		return x.BubbleFrame
	}
	return 0
}

func (x *PlayerBaseInfo) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *PlayerBaseInfo) GetVehicleID() uint64 {
	if x != nil {
		return x.VehicleID
	}
	return 0
}

func (x *PlayerBaseInfo) GetActData() *ActionData {
	if x != nil {
		return x.ActData
	}
	return nil
}

func (x *PlayerBaseInfo) GetVipLevel() uint32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *PlayerBaseInfo) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PlayerBaseInfo) GetInteractObjID() uint64 {
	if x != nil {
		return x.InteractObjID
	}
	return 0
}

func (x *PlayerBaseInfo) GetInteractObjSeat() uint32 {
	if x != nil {
		return x.InteractObjSeat
	}
	return 0
}

func (x *PlayerBaseInfo) GetNameColor() bool {
	if x != nil {
		return x.NameColor
	}
	return false
}

func (x *PlayerBaseInfo) GetBaseLevel() int32 {
	if x != nil {
		return x.BaseLevel
	}
	return 0
}

func (x *PlayerBaseInfo) GetBaseExp() int32 {
	if x != nil {
		return x.BaseExp
	}
	return 0
}

type Vec3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=X,proto3" json:"X,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=Z,proto3" json:"Z,omitempty"`
}

func (x *Vec3) Reset() {
	*x = Vec3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vec3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec3) ProtoMessage() {}

func (x *Vec3) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec3.ProtoReflect.Descriptor instead.
func (*Vec3) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{2}
}

func (x *Vec3) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec3) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Vec3) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type UnitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId            uint64          `protobuf:"varint,1,opt,name=unitId,proto3" json:"unitId,omitempty"`                         // 唯一id
	TypeId            uint32          `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`                         // UnitTable表id
	PosX              float32         `protobuf:"fixed32,3,opt,name=posX,proto3" json:"posX,omitempty"`                            // x坐标
	PosY              float32         `protobuf:"fixed32,4,opt,name=posY,proto3" json:"posY,omitempty"`                            // y坐标
	PosZ              float32         `protobuf:"fixed32,5,opt,name=posZ,proto3" json:"posZ,omitempty"`                            // z坐标
	RotateX           float32         `protobuf:"fixed32,6,opt,name=rotateX,proto3" json:"rotateX,omitempty"`                      // 旋转x
	RotateY           float32         `protobuf:"fixed32,7,opt,name=rotateY,proto3" json:"rotateY,omitempty"`                      // 旋转y
	RotateZ           float32         `protobuf:"fixed32,8,opt,name=rotateZ,proto3" json:"rotateZ,omitempty"`                      // 旋转z
	CanBeCarried      bool            `protobuf:"varint,9,opt,name=canBeCarried,proto3" json:"canBeCarried,omitempty"`             // 是否可以乘载
	AdditionalList    []uint64        `protobuf:"varint,10,rep,packed,name=additionalList,proto3" json:"additionalList,omitempty"` // 附加列表
	ActData           *UnitActionData `protobuf:"bytes,12,opt,name=actData,proto3" json:"actData,omitempty"`                       // 动作数据
	AttachID          uint64          `protobuf:"varint,13,opt,name=AttachID,proto3" json:"AttachID,omitempty"`                    // 绑定的单位ID
	Attires           []uint32        `protobuf:"varint,14,rep,packed,name=Attires,proto3" json:"Attires,omitempty"`               // 装扮数据
	AttacheBuildingID uint64          `protobuf:"varint,15,opt,name=attacheBuildingID,proto3" json:"attacheBuildingID,omitempty"`  // 正在交互的建筑，椅子
	BuildingSeat      uint32          `protobuf:"varint,16,opt,name=buildingSeat,proto3" json:"buildingSeat,omitempty"`            // 交互建筑的位置
	SkinColor         uint32          `protobuf:"varint,17,opt,name=skinColor,proto3" json:"skinColor,omitempty"`                  // 皮肤颜色
	Name              string          `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`                             // 名字
	IsWork            bool            `protobuf:"varint,19,opt,name=isWork,proto3" json:"isWork,omitempty"`                        // 是否在工作中
}

func (x *UnitInfo) Reset() {
	*x = UnitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitInfo) ProtoMessage() {}

func (x *UnitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitInfo.ProtoReflect.Descriptor instead.
func (*UnitInfo) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{3}
}

func (x *UnitInfo) GetUnitId() uint64 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *UnitInfo) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *UnitInfo) GetPosX() float32 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *UnitInfo) GetPosY() float32 {
	if x != nil {
		return x.PosY
	}
	return 0
}

func (x *UnitInfo) GetPosZ() float32 {
	if x != nil {
		return x.PosZ
	}
	return 0
}

func (x *UnitInfo) GetRotateX() float32 {
	if x != nil {
		return x.RotateX
	}
	return 0
}

func (x *UnitInfo) GetRotateY() float32 {
	if x != nil {
		return x.RotateY
	}
	return 0
}

func (x *UnitInfo) GetRotateZ() float32 {
	if x != nil {
		return x.RotateZ
	}
	return 0
}

func (x *UnitInfo) GetCanBeCarried() bool {
	if x != nil {
		return x.CanBeCarried
	}
	return false
}

func (x *UnitInfo) GetAdditionalList() []uint64 {
	if x != nil {
		return x.AdditionalList
	}
	return nil
}

func (x *UnitInfo) GetActData() *UnitActionData {
	if x != nil {
		return x.ActData
	}
	return nil
}

func (x *UnitInfo) GetAttachID() uint64 {
	if x != nil {
		return x.AttachID
	}
	return 0
}

func (x *UnitInfo) GetAttires() []uint32 {
	if x != nil {
		return x.Attires
	}
	return nil
}

func (x *UnitInfo) GetAttacheBuildingID() uint64 {
	if x != nil {
		return x.AttacheBuildingID
	}
	return 0
}

func (x *UnitInfo) GetBuildingSeat() uint32 {
	if x != nil {
		return x.BuildingSeat
	}
	return 0
}

func (x *UnitInfo) GetSkinColor() uint32 {
	if x != nil {
		return x.SkinColor
	}
	return 0
}

func (x *UnitInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitInfo) GetIsWork() bool {
	if x != nil {
		return x.IsWork
	}
	return false
}

type UnitActionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActType      uint32          `protobuf:"varint,1,opt,name=actType,proto3" json:"actType,omitempty"`                                       // 0-清除当前状态 1-巡逻状态 2-一次性动作 3-持续性动作
	ActName      string          `protobuf:"bytes,2,opt,name=actName,proto3" json:"actName,omitempty"`                                        // 动作名称
	ActStartTime int64           `protobuf:"varint,3,opt,name=actStartTime,proto3" json:"actStartTime,omitempty"`                             // 动作开始时间
	ParseType    ActionParseType `protobuf:"varint,4,opt,name=ParseType,proto3,enum=ServerCommon.ActionParseType" json:"ParseType,omitempty"` // 参数解析类型
	Param        uint32          `protobuf:"varint,5,opt,name=param,proto3" json:"param,omitempty"`                                           // 额外参数
	EmojiID      uint32          `protobuf:"varint,6,opt,name=EmojiID,proto3" json:"EmojiID,omitempty"`                                       // 气泡框表情或者
}

func (x *UnitActionData) Reset() {
	*x = UnitActionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitActionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitActionData) ProtoMessage() {}

func (x *UnitActionData) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitActionData.ProtoReflect.Descriptor instead.
func (*UnitActionData) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{4}
}

func (x *UnitActionData) GetActType() uint32 {
	if x != nil {
		return x.ActType
	}
	return 0
}

func (x *UnitActionData) GetActName() string {
	if x != nil {
		return x.ActName
	}
	return ""
}

func (x *UnitActionData) GetActStartTime() int64 {
	if x != nil {
		return x.ActStartTime
	}
	return 0
}

func (x *UnitActionData) GetParseType() ActionParseType {
	if x != nil {
		return x.ParseType
	}
	return ActionParseType_Nothing
}

func (x *UnitActionData) GetParam() uint32 {
	if x != nil {
		return x.Param
	}
	return 0
}

func (x *UnitActionData) GetEmojiID() uint32 {
	if x != nil {
		return x.EmojiID
	}
	return 0
}

type InteractiveObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 唯一id
	TypeId    uint32         `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`                                   // 配表id
	PosX      float32        `protobuf:"fixed32,3,opt,name=posX,proto3" json:"posX,omitempty"`                                      // x坐标
	PosY      float32        `protobuf:"fixed32,4,opt,name=posY,proto3" json:"posY,omitempty"`                                      // y坐标
	PosZ      float32        `protobuf:"fixed32,5,opt,name=posZ,proto3" json:"posZ,omitempty"`                                      // z坐标
	RotateX   float32        `protobuf:"fixed32,6,opt,name=rotateX,proto3" json:"rotateX,omitempty"`                                // 旋转x
	RotateY   float32        `protobuf:"fixed32,7,opt,name=rotateY,proto3" json:"rotateY,omitempty"`                                // 旋转y
	RotateZ   float32        `protobuf:"fixed32,8,opt,name=rotateZ,proto3" json:"rotateZ,omitempty"`                                // 旋转z
	JumpScene uint32         `protobuf:"varint,9,opt,name=jumpScene,proto3" json:"jumpScene,omitempty"`                             // 跳转场景id(传送门数据)
	JumpBirth int32          `protobuf:"varint,10,opt,name=jumpBirth,proto3" json:"jumpBirth,omitempty"`                            // 跳转场景的出生点ID
	Players   []uint64       `protobuf:"varint,11,rep,packed,name=players,proto3" json:"players,omitempty"`                         // 正在交互的玩家
	LocalData string         `protobuf:"bytes,12,opt,name=localData,proto3" json:"localData,omitempty"`                             // 编辑器自定义数据
	IsRes     bool           `protobuf:"varint,13,opt,name=isRes,proto3" json:"isRes,omitempty"`                                    // 是否是资源类型
	InterType uint32         `protobuf:"varint,14,opt,name=interType,proto3" json:"interType,omitempty"`                            // 交互类型
	SubPosX   float32        `protobuf:"fixed32,15,opt,name=subPosX,proto3" json:"subPosX,omitempty"`                               // x坐标
	SubPosY   float32        `protobuf:"fixed32,16,opt,name=subPosY,proto3" json:"subPosY,omitempty"`                               // y坐标
	SubPosZ   float32        `protobuf:"fixed32,17,opt,name=subPosZ,proto3" json:"subPosZ,omitempty"`                               // z坐标
	Count     uint32         `protobuf:"varint,18,opt,name=count,proto3" json:"count,omitempty"`                                    // 交互次数
	LastTime  int64          `protobuf:"varint,19,opt,name=lastTime,proto3" json:"lastTime,omitempty"`                              // 上一次交互的时间戳
	Status    InterObjStatus `protobuf:"varint,20,opt,name=status,proto3,enum=ServerCommon.InterObjStatus" json:"status,omitempty"` // 状态
	AreaID    int32          `protobuf:"varint,21,opt,name=areaID,proto3" json:"areaID,omitempty"`                                  // 区域ID
	ZoomX     float32        `protobuf:"fixed32,22,opt,name=zoomX,proto3" json:"zoomX,omitempty"`                                   // 缩放x
	ZoomY     float32        `protobuf:"fixed32,23,opt,name=zoomY,proto3" json:"zoomY,omitempty"`                                   // 缩放y
	ZoomZ     float32        `protobuf:"fixed32,24,opt,name=zoomZ,proto3" json:"zoomZ,omitempty"`                                   // 缩放z
	TagID     int32          `protobuf:"varint,25,opt,name=tagID,proto3" json:"tagID,omitempty"`                                    // 标记ID
	Index     int32          `protobuf:"varint,26,opt,name=index,proto3" json:"index,omitempty"`                                    // 序号
	GroupID   int32          `protobuf:"varint,27,opt,name=groupID,proto3" json:"groupID,omitempty"`                                // 组号
	Params    string         `protobuf:"bytes,28,opt,name=params,proto3" json:"params,omitempty"`                                   // 自定义数据
	Owner     uint64         `protobuf:"varint,29,opt,name=owner,proto3" json:"owner,omitempty"`                                    // 拥有者id
}

func (x *InteractiveObj) Reset() {
	*x = InteractiveObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractiveObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractiveObj) ProtoMessage() {}

func (x *InteractiveObj) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractiveObj.ProtoReflect.Descriptor instead.
func (*InteractiveObj) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{5}
}

func (x *InteractiveObj) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InteractiveObj) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *InteractiveObj) GetPosX() float32 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *InteractiveObj) GetPosY() float32 {
	if x != nil {
		return x.PosY
	}
	return 0
}

func (x *InteractiveObj) GetPosZ() float32 {
	if x != nil {
		return x.PosZ
	}
	return 0
}

func (x *InteractiveObj) GetRotateX() float32 {
	if x != nil {
		return x.RotateX
	}
	return 0
}

func (x *InteractiveObj) GetRotateY() float32 {
	if x != nil {
		return x.RotateY
	}
	return 0
}

func (x *InteractiveObj) GetRotateZ() float32 {
	if x != nil {
		return x.RotateZ
	}
	return 0
}

func (x *InteractiveObj) GetJumpScene() uint32 {
	if x != nil {
		return x.JumpScene
	}
	return 0
}

func (x *InteractiveObj) GetJumpBirth() int32 {
	if x != nil {
		return x.JumpBirth
	}
	return 0
}

func (x *InteractiveObj) GetPlayers() []uint64 {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *InteractiveObj) GetLocalData() string {
	if x != nil {
		return x.LocalData
	}
	return ""
}

func (x *InteractiveObj) GetIsRes() bool {
	if x != nil {
		return x.IsRes
	}
	return false
}

func (x *InteractiveObj) GetInterType() uint32 {
	if x != nil {
		return x.InterType
	}
	return 0
}

func (x *InteractiveObj) GetSubPosX() float32 {
	if x != nil {
		return x.SubPosX
	}
	return 0
}

func (x *InteractiveObj) GetSubPosY() float32 {
	if x != nil {
		return x.SubPosY
	}
	return 0
}

func (x *InteractiveObj) GetSubPosZ() float32 {
	if x != nil {
		return x.SubPosZ
	}
	return 0
}

func (x *InteractiveObj) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *InteractiveObj) GetLastTime() int64 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

func (x *InteractiveObj) GetStatus() InterObjStatus {
	if x != nil {
		return x.Status
	}
	return InterObjStatus_ObjectNormal
}

func (x *InteractiveObj) GetAreaID() int32 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *InteractiveObj) GetZoomX() float32 {
	if x != nil {
		return x.ZoomX
	}
	return 0
}

func (x *InteractiveObj) GetZoomY() float32 {
	if x != nil {
		return x.ZoomY
	}
	return 0
}

func (x *InteractiveObj) GetZoomZ() float32 {
	if x != nil {
		return x.ZoomZ
	}
	return 0
}

func (x *InteractiveObj) GetTagID() int32 {
	if x != nil {
		return x.TagID
	}
	return 0
}

func (x *InteractiveObj) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *InteractiveObj) GetGroupID() int32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *InteractiveObj) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *InteractiveObj) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

type LimitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cond      uint32 `protobuf:"varint,1,opt,name=Cond,proto3" json:"Cond,omitempty"`          // 原因
	InReason  string `protobuf:"bytes,2,opt,name=InReason,proto3" json:"InReason,omitempty"`   // 内部原因
	OutReason string `protobuf:"bytes,3,opt,name=OutReason,proto3" json:"OutReason,omitempty"` // 内部原因
	ExpTime   int64  `protobuf:"varint,4,opt,name=ExpTime,proto3" json:"ExpTime,omitempty"`    // 过期时间
}

func (x *LimitInfo) Reset() {
	*x = LimitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitInfo) ProtoMessage() {}

func (x *LimitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitInfo.ProtoReflect.Descriptor instead.
func (*LimitInfo) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{6}
}

func (x *LimitInfo) GetCond() uint32 {
	if x != nil {
		return x.Cond
	}
	return 0
}

func (x *LimitInfo) GetInReason() string {
	if x != nil {
		return x.InReason
	}
	return ""
}

func (x *LimitInfo) GetOutReason() string {
	if x != nil {
		return x.OutReason
	}
	return ""
}

func (x *LimitInfo) GetExpTime() int64 {
	if x != nil {
		return x.ExpTime
	}
	return 0
}

type RegisterToGateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ServerID   string         `protobuf:"bytes,2,opt,name=serverID,proto3" json:"serverID,omitempty"`
	ServerType ServerCategory `protobuf:"varint,3,opt,name=serverType,proto3,enum=ServerCommon.ServerCategory" json:"serverType,omitempty"`
	ServerAddr string         `protobuf:"bytes,4,opt,name=serverAddr,proto3" json:"serverAddr,omitempty"`
	MsgIds     []uint32       `protobuf:"varint,5,rep,packed,name=msgIds,proto3" json:"msgIds,omitempty"`
	ProcIndex  uint32         `protobuf:"varint,6,opt,name=procIndex,proto3" json:"procIndex,omitempty"`
	Name       string         `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	MaxPlayer  int32          `protobuf:"varint,8,opt,name=maxPlayer,proto3" json:"maxPlayer,omitempty"`
	ZoneId     int32          `protobuf:"varint,9,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
}

func (x *RegisterToGateway) Reset() {
	*x = RegisterToGateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterToGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToGateway) ProtoMessage() {}

func (x *RegisterToGateway) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterToGateway.ProtoReflect.Descriptor instead.
func (*RegisterToGateway) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterToGateway) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterToGateway) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *RegisterToGateway) GetServerType() ServerCategory {
	if x != nil {
		return x.ServerType
	}
	return ServerCategory_Undefined
}

func (x *RegisterToGateway) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

func (x *RegisterToGateway) GetMsgIds() []uint32 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

func (x *RegisterToGateway) GetProcIndex() uint32 {
	if x != nil {
		return x.ProcIndex
	}
	return 0
}

func (x *RegisterToGateway) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterToGateway) GetMaxPlayer() int32 {
	if x != nil {
		return x.MaxPlayer
	}
	return 0
}

func (x *RegisterToGateway) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type RegisterToGatewayRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	ZoneId int32  `protobuf:"varint,2,opt,name=zoneId,proto3" json:"zoneId,omitempty"`
}

func (x *RegisterToGatewayRet) Reset() {
	*x = RegisterToGatewayRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterToGatewayRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToGatewayRet) ProtoMessage() {}

func (x *RegisterToGatewayRet) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterToGatewayRet.ProtoReflect.Descriptor instead.
func (*RegisterToGatewayRet) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterToGatewayRet) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *RegisterToGatewayRet) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type UpdateOnlineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcIndex uint32 `protobuf:"varint,1,opt,name=procIndex,proto3" json:"procIndex,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MaxPlayer int32  `protobuf:"varint,3,opt,name=maxPlayer,proto3" json:"maxPlayer,omitempty"`
}

func (x *UpdateOnlineInfo) Reset() {
	*x = UpdateOnlineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnlineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineInfo) ProtoMessage() {}

func (x *UpdateOnlineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineInfo.ProtoReflect.Descriptor instead.
func (*UpdateOnlineInfo) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateOnlineInfo) GetProcIndex() uint32 {
	if x != nil {
		return x.ProcIndex
	}
	return 0
}

func (x *UpdateOnlineInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOnlineInfo) GetMaxPlayer() int32 {
	if x != nil {
		return x.MaxPlayer
	}
	return 0
}

type UpdateOnlineInfoRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateOnlineInfoRet) Reset() {
	*x = UpdateOnlineInfoRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnlineInfoRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineInfoRet) ProtoMessage() {}

func (x *UpdateOnlineInfoRet) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineInfoRet.ProtoReflect.Descriptor instead.
func (*UpdateOnlineInfoRet) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateOnlineInfoRet) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GatewayForwardPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid       uint64 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	PlayerNumber int32  `protobuf:"varint,2,opt,name=playerNumber,proto3" json:"playerNumber,omitempty"`
	Data         []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GatewayForwardPacket) Reset() {
	*x = GatewayForwardPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sever_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayForwardPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayForwardPacket) ProtoMessage() {}

func (x *GatewayForwardPacket) ProtoReflect() protoreflect.Message {
	mi := &file_sever_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayForwardPacket.ProtoReflect.Descriptor instead.
func (*GatewayForwardPacket) Descriptor() ([]byte, []int) {
	return file_sever_common_proto_rawDescGZIP(), []int{11}
}

func (x *GatewayForwardPacket) GetUserid() uint64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *GatewayForwardPacket) GetPlayerNumber() int32 {
	if x != nil {
		return x.PlayerNumber
	}
	return 0
}

func (x *GatewayForwardPacket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_sever_common_proto protoreflect.FileDescriptor

var file_sever_common_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x65, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x9e, 0x05, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x67, 0x6f, 0x6c,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x49, 0x44, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x4f, 0x62,
	0x6a, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x4f,
	0x62, 0x6a, 0x53, 0x65, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x45, 0x78, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65,
	0x45, 0x78, 0x70, 0x22, 0x30, 0x0a, 0x04, 0x56, 0x65, 0x63, 0x33, 0x12, 0x0c, 0x0a, 0x01, 0x58,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x5a, 0x22, 0x9a, 0x04, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x59, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x59, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x73, 0x5a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x5a, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x58, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x59, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x59, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5a, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5a, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x6e, 0x42, 0x65, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x74, 0x74, 0x69, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x41,
	0x74, 0x74, 0x69, 0x72, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6b, 0x69,
	0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x57, 0x6f,
	0x72, 0x6b, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a,
	0x09, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x44, 0x22, 0xee, 0x05, 0x0a, 0x0e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73,
	0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x59, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x73, 0x5a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x5a, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x58, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x58, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x59, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x59, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5a,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5a, 0x12,
	0x1c, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6a, 0x75, 0x6d, 0x70, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x52, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x50, 0x6f,
	0x73, 0x58, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x73,
	0x58, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x73, 0x59, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x73, 0x59, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x50, 0x6f, 0x73, 0x5a, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x50, 0x6f, 0x73, 0x5a, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6f, 0x6d, 0x58, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x7a, 0x6f, 0x6f, 0x6d, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x7a,
	0x6f, 0x6f, 0x6d, 0x59, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x7a, 0x6f, 0x6f, 0x6d,
	0x59, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6f, 0x6d, 0x5a, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x7a, 0x6f, 0x6f, 0x6d, 0x5a, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x44,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x09, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x49, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x75, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x75, 0x74,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x78, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xa3, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x6f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x2d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x66, 0x0a, 0x14, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x3d, 0x0a, 0x0f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x6f, 0x6c,
	0x64, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x61, 0x74,
	0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x10, 0x02, 0x2a, 0x35, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x10, 0x01, 0x2a,
	0x73, 0x0a, 0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x69, 0x6e,
	0x64, 0x75, 0x6c, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10, 0x03, 0x12, 0x06, 0x0a,
	0x02, 0x47, 0x4d, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50,
	0x61, 0x79, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0x06, 0x2a, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x42, 0x10, 0x04,
	0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x68, 0x75, 0x68, 0x61, 0x6f, 0x30, 0x30, 0x2f, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sever_common_proto_rawDescOnce sync.Once
	file_sever_common_proto_rawDescData = file_sever_common_proto_rawDesc
)

func file_sever_common_proto_rawDescGZIP() []byte {
	file_sever_common_proto_rawDescOnce.Do(func() {
		file_sever_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_sever_common_proto_rawDescData)
	})
	return file_sever_common_proto_rawDescData
}

var file_sever_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_sever_common_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sever_common_proto_goTypes = []interface{}{
	(ActionParseType)(0),         // 0: ServerCommon.ActionParseType
	(InterObjStatus)(0),          // 1: ServerCommon.InterObjStatus
	(KickReason)(0),              // 2: ServerCommon.KickReason
	(ServerCategory)(0),          // 3: ServerCommon.ServerCategory
	(*ActionData)(nil),           // 4: ServerCommon.ActionData
	(*PlayerBaseInfo)(nil),       // 5: ServerCommon.PlayerBaseInfo
	(*Vec3)(nil),                 // 6: ServerCommon.Vec3
	(*UnitInfo)(nil),             // 7: ServerCommon.UnitInfo
	(*UnitActionData)(nil),       // 8: ServerCommon.UnitActionData
	(*InteractiveObj)(nil),       // 9: ServerCommon.InteractiveObj
	(*LimitInfo)(nil),            // 10: ServerCommon.LimitInfo
	(*RegisterToGateway)(nil),    // 11: ServerCommon.RegisterToGateway
	(*RegisterToGatewayRet)(nil), // 12: ServerCommon.RegisterToGatewayRet
	(*UpdateOnlineInfo)(nil),     // 13: ServerCommon.UpdateOnlineInfo
	(*UpdateOnlineInfoRet)(nil),  // 14: ServerCommon.UpdateOnlineInfoRet
	(*GatewayForwardPacket)(nil), // 15: ServerCommon.GatewayForwardPacket
}
var file_sever_common_proto_depIdxs = []int32{
	4, // 0: ServerCommon.PlayerBaseInfo.actData:type_name -> ServerCommon.ActionData
	8, // 1: ServerCommon.UnitInfo.actData:type_name -> ServerCommon.UnitActionData
	0, // 2: ServerCommon.UnitActionData.ParseType:type_name -> ServerCommon.ActionParseType
	1, // 3: ServerCommon.InteractiveObj.status:type_name -> ServerCommon.InterObjStatus
	3, // 4: ServerCommon.RegisterToGateway.serverType:type_name -> ServerCommon.ServerCategory
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sever_common_proto_init() }
func file_sever_common_proto_init() {
	if File_sever_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sever_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vec3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitActionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractiveObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterToGateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterToGatewayRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOnlineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOnlineInfoRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sever_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayForwardPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sever_common_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sever_common_proto_goTypes,
		DependencyIndexes: file_sever_common_proto_depIdxs,
		EnumInfos:         file_sever_common_proto_enumTypes,
		MessageInfos:      file_sever_common_proto_msgTypes,
	}.Build()
	File_sever_common_proto = out.File
	file_sever_common_proto_rawDesc = nil
	file_sever_common_proto_goTypes = nil
	file_sever_common_proto_depIdxs = nil
}
