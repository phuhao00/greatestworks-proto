syntax = "proto3";

package  ServerCommon;

option go_package="github.com/phuhao00/greatestworks-proto/server_common;server_common";


message ActionData {
  uint32 actionState      = 1; // 动作枚举值
  int64 actionStartTime   = 2; // 动作开始时间
  string param            = 3; // 参数
}

message PlayerBaseInfo {
  uint64 playerId         = 1;
  int32 charId            = 2;
  string name             = 3;
  int32 gold              = 4;
  float positionX         = 5;
  float positionY         = 6;
  float positionZ         = 7;
  float orientation       = 8;
  uint32 frame            = 9;  // 相框
  uint32 head             = 10; // 头像
  string HeadUrl          = 11; // 自定义头像url
  uint32 model            = 12; // 模型
  uint32 bubbleFrame      = 13; // 气泡框
  int32  coin             = 14; //
  uint64 vehicleID        = 15; // 当前乘坐的载具ID
  ActionData actData      = 16; // 动作
  uint32  vipLevel        = 17; // vip lv
  int32  exp              = 18;
  uint64 interactObjID    = 19; // 交互物件ID
  uint32 interactObjSeat  = 20; // 交互物件座位号
  bool nameColor          = 21; // 昵称变颜色
  int32 baseLevel         = 22; //人物等级
  int32 baseExp           = 23; //人物经验
}

message Vec3 {
  float X = 1;
  float Y = 2;
  float Z = 3;
}

enum ActionParseType {
  Nothing = 0;
  HoldDishes = 1; // 举菜
  EatDishes = 2; // 吃菜
}

message UnitInfo {
  uint64 unitId                   = 1; // 唯一id
  uint32 typeId                   = 2; // UnitTable表id
  float posX                      = 3; // x坐标
  float posY                      = 4; // y坐标
  float posZ                      = 5; // z坐标
  float rotateX                   = 6; // 旋转x
  float rotateY                   = 7; // 旋转y
  float rotateZ                   = 8; // 旋转z
  bool  canBeCarried              = 9; // 是否可以乘载
  repeated uint64 additionalList  = 10; // 附加列表
  UnitActionData actData          = 12; // 动作数据
  uint64 AttachID                 = 13; // 绑定的单位ID
  repeated uint32  Attires        = 14; // 装扮数据
  uint64 attacheBuildingID        = 15; // 正在交互的建筑，椅子
  uint32 buildingSeat             = 16; // 交互建筑的位置
  uint32 skinColor                = 17; // 皮肤颜色
  string name                     = 18; // 名字
  bool isWork                     = 19; // 是否在工作中
}

message UnitActionData {
  uint32 actType            = 1; // 0-清除当前状态 1-巡逻状态 2-一次性动作 3-持续性动作
  string actName            = 2; // 动作名称
  int64 actStartTime        = 3; // 动作开始时间
  ActionParseType ParseType = 4; // 参数解析类型
  uint32 param              = 5; // 额外参数
  uint32 EmojiID            = 6; // 气泡框表情或者
}

enum InterObjStatus
{
  ObjectNormal    = 0; // 正常
  ObjectHarvest   = 1; // 成熟
}


message InteractiveObj {
  uint64 id               = 1;  // 唯一id
  uint32 typeId           = 2;  // 配表id
  float posX              = 3;  // x坐标
  float posY              = 4;  // y坐标
  float posZ              = 5;  // z坐标
  float rotateX           = 6;  // 旋转x
  float rotateY           = 7;  // 旋转y
  float rotateZ           = 8;  // 旋转z
  uint32 jumpScene        = 9;  // 跳转场景id(传送门数据)
  int32 jumpBirth         = 10; // 跳转场景的出生点ID
  repeated uint64 players = 11; // 正在交互的玩家
  string localData        = 12; // 编辑器自定义数据
  bool isRes              = 13; // 是否是资源类型
  uint32 interType        = 14; // 交互类型
  float subPosX           = 15; // x坐标
  float subPosY           = 16; // y坐标
  float subPosZ           = 17; // z坐标
  uint32 count 			      = 18; // 交互次数
  int64 lastTime			    = 19; // 上一次交互的时间戳
  InterObjStatus status   = 20; // 状态
  int32 areaID            = 21; // 区域ID
  float zoomX             = 22; // 缩放x
  float zoomY             = 23; // 缩放y
  float zoomZ             = 24; // 缩放z
  int32 tagID             = 25; // 标记ID
  int32 index             = 26; // 序号
  int32 groupID           = 27; // 组号
  string params           = 28; // 自定义数据
  uint64 owner            = 29; // 拥有者id
}

enum KickReason
{
  UNKNOWN     = 0; // 未知原因
  indulgeStop = 1; // 防沉迷
  RemoteLogin = 2; // 异地登录
  ServerClose = 3; // 服务器关闭
  GM          = 4; // GM
  RefundPay   = 5; // 退款
  NoResponse =  6; // 未响应
}

message LimitInfo
{
  uint32 Cond       = 1; // 原因
  string InReason   = 2;  // 内部原因
  string OutReason  = 3;  // 内部原因
  int64 ExpTime     = 4; // 过期时间
}

enum ServerCategory{

   Undefined  = 0; //没定义
   Login      = 1; //登录服
   Gateway    = 2; //网关
   World      = 3; //世界服，大厅
   DB         = 4; //
  
}


message RegisterToGateway {
  string token                   = 1;
  string serverID                = 2;
  ServerCategory serverType      = 3;
  string serverAddr              = 4;
  repeated uint32 msgIds         = 5;
  uint32  procIndex              = 6;
  string  name                   = 7;
  int32   maxPlayer              = 8;
  int32   zoneId                 = 9;
}

message RegisterToGatewayRet {
  uint32 result = 1;
  int32  zoneId = 2;
}


message UpdateOnlineInfo {
  uint32  procIndex      = 1;
  string  name           = 2;
  int32   maxPlayer      = 3;
}

message UpdateOnlineInfoRet {uint32 result = 1; }

message GatewayForwardPacket {
  uint64 userid = 1;
  int32 playerNumber = 2;
  bytes data    = 3;
}


message SCKick
{
  KickReason kick = 1;
  string     contend = 2;
}

//服务注册状态
enum ServerRegisterStatus{
  Fail    =0;
  OK      =1;
  Unknown =2;
}

message ServerMsgData{
  uint64 PlayerID =1;
  string ServerID =2;
  bytes  Data     =3;
}

message BroadcastMsgData  {
  uint64 MessageId =1;
  bytes  Msg =2;
}

message GameMsgData  {
  uint64 PlayerID =1;
  string ServerID =2;
  bytes  Data     =3;
}


message RegisterToGame {
  string token      = 1;
  string serverID   = 2;
  uint32 serverType = 3;
  string serverAddr = 4;
  uint32 scrSerType = 5;
  string serRpcAddr = 6;
}

message RegisterToGameRet {
  uint32 result          = 1;
  repeated uint32 msgIds = 2;
}

enum GameType{
  GNone  = 0;
}

message CreateGame {

  int32 sceneId           = 1;
  uint64 playerId         = 2;
  string worldServerId    = 3;
  GameType gameType       = 4;
  uint64  gameId          = 5;
  string   name           = 7;
  string   nick           = 8;

}

message CreateGameRet {
  uint32 result   = 1;
  uint64 playerId = 2;
}

message SrvMsgToWorldPlayer {
  uint64 playerId = 1;
  bytes data      = 2;
}



